<!DOCTYPE html>
<html lang="en">
<head>
<title>{headTitle}</title>
<link rel="stylesheet" type="text/css" href="{site-style}" />
<meta charset="utf-8" />
<meta name="decription" content="{description}" />
<script src="https://code.jquery.com/jquery-latest.min.js"></script>
{?socketioFlag}
<script src="socket.io/socket.io.js"></script>
{/socketioFlag}
</head>
<body>
<div id="page" class="page">
  <header>
  <div class="no-print">
  <div id="header-float-right">
    <table class="upper-right">
    <tr>
      <td>
        &nbsp;&nbsp;&nbsp;<a href="{home-href}index.html" class="active">Home</a> | <a href="{home-href}about.html">About</a>
	{?searchFormFlag}
	<div id="search">
	  <form action="{home-href}/search.html" method="post" id="search-block-form" accept-charset="UTF-8">
	    <table style="margin-top: 12px;">
	      <tr>
		<td>
		  <p class="element-invisible" style="margin-top: 6px;">Search</p>
		</td>
		<td>
		  <div class="form-textfield" style="display: inline;">
		    <input title="Enter the terms you wish to search for." type="text" name="queryterm" value="" size="16" maxlength="30" class="form-text" />
		  </div>
		</td>
		<td>
		  <div class="search-button" id="search-submit-button" style="display: inline;"><input type="image" id="edit-submit" name="submit" src="{home-href}_images/search_stamp.png" style="width: 20px; margin-top: 3px;" class="form-submit" alt="search" />
		  </div>
		</td>
	    </table>
        </form>
        </div>
{/searchFormFlag}
      </td>
    </tr>
    </table>
  </div>
  <div id="header-site-info">
    <table class="site-info">
    <tr>
      <td class="logo">
        <div class="logo"><a href="{home-href}" title="{home-title}"><img src="{logo-src}" alt="logo-alt" class="{logo-class}" style="width: 110px;"/></a></div>
      </td>
      <td>
        <div id="site-name"><a href="{frb-home-href}" title="{home-title}">{site-name}</a></div>
        <p id="tagline">{site-tagline}</p>
	<div id="navbox">
        <nav>
          <div id="subsMenu">{subsMenu|s}</div>
        </nav>
        <nav>
          <div id="viewMenu">{viewMenu|s}</div>
        </nav>
        <nav>
          <div id="sortMenu">{sortMenu|s}</div> 
        </nav>
	</div>
      </td>
    </tr>
    </table>
  </div><!-- end header-site-info -->
  </div><!-- end no-print -->  
  </header>
<br>
<main>
<div class="col-1">
<!-- articles -->
{#articles}
  <article>{article}</article>
{/articles}
{?rawfeedFlag}
<div id="rawfeed">rawfeed: {rawfeed}</div>
{:else}
{/rawfeedFlag}
<!--
<form id="messageForm">
  <label>enter message</label><br>
  <textarea class="form-control" id="message">
  </textarea>
  <input type="submit" class="btn btn-primary" value="send message" />
  <br>
</form>
-->
{?table-title}
<h1 class="table-title">{table-title|s}</h1>
{/table-title}
<!-- data -->
{?dataExistsFlag}
  {?linkToAllExists}
    <p>{linkToAll|s}</p>
    <br>
  {/linkToAllExists}
  {?singleFlag}
{>"table-single"/}
  {/singleFlag}
  {?manyFlag}
{>"table-many"/}
  {/manyFlag}
  {?specialFlag}
{>"table-special"/}
  {/specialFlag}
  {?tableSingleEditFlag}
{>"table-single-edit"/}
  {/tableSingleEditFlag}
{:else}
  <p>No data was found.</p>
{/dataExistsFlag}
<br>
<!-- end data -->
</div><!-- col-1 -->
</main>

{?configFlag}
<div class="col-2">
<!-- config -->
<h2>config</h2>
<ul style="font-size: 80%">
{@iterate on=suit}
  <li>{key} = {value|s}</li>
{/iterate}
</ul>
<br>
<!-- end config -->
</div><!-- col-2 -->
<footer class="footer">
</footer>
</div><!-- footer -->
{/configFlag}
{?socketioFlag}
<script>
  $(function(){
    var socket = io.connect();
    var $messageForm = $('#messageForm');
    var $message = $('#message');
    var $rawfeed = $('#rawfeed');
    $messageForm.submit(function(e) {
      e.preventDefault();
      console.log('submmitted');
      socket.emit('send message', $message.val());
      $message.val('');
    });
    $('.statuscode-instance').mouseover(function(element) {
      var id = element.currentTarget.id;
      var url = element.currentTarget.innerText;
      var className = element.currentTarget.baseURI.split('/')[3];
      if (url.match(/http/)) {
        console.log('updateStatusCode()');
        socket.emit('updateStatusCodes', id, url, className);
      } else {
        console.log('already updateStatusCode()');
      }
    });
    $('.validhtml-instance').mouseover(function(element) {
      var id = element.currentTarget.id;
      var url = element.currentTarget.innerText;
      var className = element.currentTarget.baseURI.split('/')[3];
      if (url.match(/http/)) {
        console.log('updateValidHtml()');
        socket.emit('updateValidHtml', id, url, className);
      } else {
        console.log('already updateValidHtml()');
      }
    });
    $('.linkcheck-instance').mouseover(function(element) {
      var id = element.currentTarget.id;
      var url = element.currentTarget.innerText;
      var className = element.currentTarget.baseURI.split('/')[3];
      if (url.match(/http/)) {
        console.log('updateLinkCheck()');
        socket.emit('updateLinkCheck', id, url, className);
      } else {
        console.log('already updateLinkCheck()');
      }
    });
    $('.measure-instance').mouseover(function(element) {
      // only once
      var idString = element.currentTarget.id;
      //var id = idString.split('-')[1];
      var index = idString.indexOf("-") + 1;
      var id = idString.substring(index);
      // eventually make this dynamic using DOM
      var className = "moneymaker_measurement_instances";
      socket.emit("measure", id, className);
      console.log("measure(" + id + ", " + className + ")");
    });
    $('.measure-instance').click(function(element) {
      element.currentTarget.innerText = "";
      // change color
      element.currentTarget.style.background = "transparent";
      console.log('measure() blanked text.');
    });
    socket.on('new message', function(data) {
      $rawfeed.text(data.msg);
      console.log('new message', data.msg);
    });
    socket.on('rawfeed', function(data) {
      $rawfeed.text(data.msg);
      console.log('rawfeed', data.msg);
    });
    socket.on('refreshStatusCode', function(data) {
      //$rawfeed.text('updated statuscode');
      $('#' + data.msg1).text(data.msg2);
      $('#' + data.msg1).css('background-color', data.msg3);
      console.log('refreshStatusCode element id ', data.msg1);
      console.log('refreshStatusCode value ', data.msg2);
    });
    socket.on('refreshMeasure', function(data) {
      //element.currentTarget.style.background = "#9933FF";
      //console.log("standard.dust refreshMeasure element id ", data.msg1);
      //console.log("standard.dust refreshMeasure element className ", data.msg2);
      //console.log("standard.dust refreshMeasure element measurement ", data.msg3);
      //console.log("standard.dust refreshMeasure element backgroundColor ", data.msg4);
      // build element id value
      var elementId = "#measure-" + data.msg1;
      console.log("standard.dust refreshMeasure elementId =", elementId);
      // parse JSON
      try {
        var messageObject = JSON.parse(data.msg3);
        var details = "";
        var dataString = "";
        if (true) {
          // measurement json
          details = data.msg3;
        } else {
          // moneymaker_measurement_instances json
          // debug
          //details += messageObject["table-title"].toString();
          //details += " " + messageObject.single.id.toString();
          //
          dataString = messageObject.single.moneymaker_measurement_name.toString();
	  dataString += " " + messageObject.single.address.toString();
	  dataString = String(dataString).replace(/%20/g, ' ').replace(/%7B/g, '{').replace(/%7D/g, '}').replace(/%7D/g, '}').replace(/%3C/g, '<').replace(/%3E/g, '/').replace(/%22/g, "\"");
          details += " " + dataString + ", ";
          details += " " + messageObject.single.txn_hash.toString();
        }
        $(elementId).text(details);

        // assess color
        var backgroundColor = "";
        if (data.msg3.includes("fail")) {
          backgroundColor = "#FFFF66";
        } else {
          backgroundColor = data.msg4;
        }
        $(elementId).css('background-color', backgroundColor);
      } catch (e) {
        var errorMessage = "standard.dust JSON parse error =" + e;
        $(elementId).text(errorMessage + " " + data.msg3);
        var backgroundColor = "red";
        $(elementId).css('background-color', backgroundColor);
      }
    });
    socket.on('refreshValidHtml', function(data) {
      $rawfeed.text('updated validhtml');
      $('#' + data.msg1).text(data.msg2);
      $('#' + data.msg1).css('background-color', data.msg3);
      console.log('refreshValidHtml element id ', data.msg1);
      //console.log('refreshValidHtml value ', data.msg2);
    });
    socket.on('refreshLinkCheck', function(data) {
      $rawfeed.text('updated linkcheck');
      $('#' + data.msg1).text(data.msg2);
      $('#' + data.msg1).css('background-color', data.msg3);
      console.log('refreshLinkCheck element id ', data.msg1);
      //console.log('refreshLinkCheck value ', data.msg2);
    });
  });
</script>
{/socketioFlag}
<p id="footer">&nbsp;</p>
</div><!-- end page -->  
<br>
</body>
</html>
